
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Character.isDigit;
import static java.lang.Character.isLetter;
import static java.lang.Character.isLowerCase;
import static java.lang.Character.isUpperCase;
import static java.lang.Character.toLowerCase;
import static java.lang.Character.toUpperCase;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author fcorte-real
 */
public class EditarUser extends javax.swing.JFrame {

    /**
     * Creates new form FormRegisto
     */
    public EditarUser(){
        initComponents();
        preencherFormulario();
        editaUtilizador();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ctxNome = new javax.swing.JTextField();
        ctxEmail = new javax.swing.JTextField();
        ctxMorada = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ctxTele = new javax.swing.JTextField();
        ctxNif = new javax.swing.JTextField();
        ctxPass = new javax.swing.JPasswordField();
        ctxRePass = new javax.swing.JPasswordField();
        ctxLogin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(153, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jLabel2.setText("Email");

        jLabel3.setText("Morada");

        jLabel4.setText("NIF");

        jLabel5.setText("Password");

        jLabel6.setText("Reescreva Password");

        ctxNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctxNomeActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 102, 255));
        jButton2.setText("Validar Dados");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Telemóvel");

        ctxPass.setText("jPasswordField1");

        ctxRePass.setText("jPasswordField2");

        jLabel8.setText("Login");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ctxEmail)
                            .addComponent(ctxMorada)
                            .addComponent(ctxNif, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(ctxTele)
                            .addComponent(ctxNome)
                            .addComponent(ctxPass)
                            .addComponent(ctxRePass)
                            .addComponent(ctxLogin))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ctxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ctxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ctxMorada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ctxNif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ctxTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctxLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ctxPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ctxRePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Login log= new Login();
        this.dispose();
        log.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mensagemErro(String erro){
        JOptionPane.showMessageDialog(null, erro, "Erro Validação", JOptionPane.ERROR_MESSAGE);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String nome= ctxNome.getText();
        String email= ctxEmail.getText();
        String morada= ctxMorada.getText();
        String nif= ctxNif.getText();
        String tele= ctxTele.getText();
        String pass= ctxPass.getText();
        String rePass= ctxRePass.getText();
        if(nome.equals("") || email.equals("") || morada.equals("") ||
                tele.equals("") || nif.equals("") || pass.equals("") ||
                rePass.equals("")){
        mensagemErro("registo inválido");
        }else{
            if(!validaNome(nome)){
                mensagemErro("o campo nome tem "
                + "de ter 2 letras no minimo e só letras");
            }
            if(!validaCampoNumerico(tele)){
                mensagemErro("o campo telemóvel tem "
                + "de ser numérico e ter 9 digitos");
            }
            if(!validaCampoNumerico(nif)){
                mensagemErro("o campo nif tem "
                + "de ser numérico e ter 9 digitos");
            }
            if(!validaEmail(email)){
                mensagemErro("mail inválido");
            }
            if(!validaMorada(morada)){
                mensagemErro("o campo morada tem "
                + "de ter 5 caracteres alfanumericos no minimo");
            }
            if(!validaPass(pass)){
                mensagemErro("password tem de ter "
                + "no minimo 8 caracteres, 1 maiuscula, 1 minuscula "
                + "1 algarismo e 1 caracter especial");
            }
            if(!pass.equals(rePass)){
                mensagemErro("confirmação de password "
                + "tem de ser igual à password");
            }
        }
        String log = ctxLogin.getText();
        File ficheiro= new File(log+".txt");
        if(!ficheiro.exists()){
            try{
                ficheiro.createNewFile();
                FileWriter fw= new FileWriter(ficheiro, true);
                BufferedWriter bw= new BufferedWriter(fw);
                bw.write(pass);
                bw.newLine();
                bw.write(nome);
                bw.newLine();
                bw.write(tele);
                bw.newLine();
                bw.write(nif);
                bw.newLine();
                bw.write(email);
                bw.newLine();
                bw.write(morada);                              
                bw.close();
                fw.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        LigaBD.atualizaUtilizador(nome, email, morada, Integer.parseInt(tele), Integer.parseInt(nif), pass, rePass);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ctxNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctxNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctxNomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRegisto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRegisto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRegisto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRegisto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRegisto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ctxEmail;
    private javax.swing.JTextField ctxLogin;
    private javax.swing.JTextField ctxMorada;
    private javax.swing.JTextField ctxNif;
    private javax.swing.JTextField ctxNome;
    private javax.swing.JPasswordField ctxPass;
    private javax.swing.JPasswordField ctxRePass;
    private javax.swing.JTextField ctxTele;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables

    private boolean validaCampoNumerico(String valor) {
        int x, cont= 0, t= valor.length();
        char c;
        if(t!=9)
            return false;
        else{
          for(x=0; x<t; x++){
              c= valor.charAt(x); 
              if(isDigit(c))
                  cont++;
          }
          if(t!= cont)
              return false;
        }
        return true;
    }
    private boolean validaNome(String valor) {
        int x, cont= 0, t= valor.length();
        char c;
        if(t<2)
            return false;
        else{
            for(x=0; x<t; x++){
                c= valor.charAt(x);
                if(c== ' ' && x!= 0){
                    cont++;
                    continue;
            }
                if(isLetter(c))
                    cont++;
            }
            if(t!= cont)
                return false;
        }
        return true;    
    }
    private boolean validaEmail(String valor){
        int ar= valor.indexOf('@');
        int p= valor.indexOf('.', ar);
        int arr= valor.indexOf('@', ar+1);
        int c= valor.indexOf(' ');
        
        if(ar== -1 || p== -1 || arr!= -1 || c!= -1)
            return false;
        else{
            return true;
            }
        }
    private boolean validaMorada(String valor){
        int t= valor.length();
        
        if(t<5)
            return false;
        else{
            return true;
            }
        }
    private boolean validaPass(String valor){
        int x, spec= 0, nrs= 0, max= 0, min= 0, t= valor.length();
        char c;
        
        if(t<8)
            return false;
        else{
          for(x=0; x<t; x++){
                c= valor.charAt(x);
                if(c== ' '){
                    return false;
                }
                if(isDigit(c)){
                    nrs++;
                }
                if(isUpperCase(c)){
                    max++;
                }
                if(isLowerCase(c)){
                    min++;
                }
                if(!isLetter(c) && !isDigit(c)){
                    spec++;
                }
            }
            if(max<1 || min<1 || nrs<1 || spec<1)
                return false;
            else{
                return true;
            }       
        }
    }
    private void preencherFormulario() {
        File ficheiro = new File (Login.user+".txt");
        FileReader fr;
        String[]lista = new String[7];
        int cont = 0;
        try {
            fr = new FileReader(ficheiro);
            BufferedReader br = new BufferedReader(fr);
            while (br.ready()){
                lista[cont]= br.readLine();
                cont++;
            }
            lista[cont]= lista[0];
            ctxPass.setText(lista[0]);
            ctxRePass.setText(lista[0]);
            ctxNome.setText(lista[1]);
            ctxEmail.setText(lista[4]);
            ctxMorada.setText(lista[5]);
            ctxNif.setText(lista[3]);
            ctxTele.setText(lista[2]);
            ctxLogin.setText(Login.user);    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EditarUser.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(EditarUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void editaUtilizador(){
        Connection conn = LigaBD.ligacao();
        String query= "SELECT * FROM utilizador WHERE login = '"+Login.user+"'";
        PreparedStatement ps;
        try {
            ps = conn.prepareStatement(query);
            ResultSet rs= ps.executeQuery();
        while(rs.next()){
            System.out.println("entrei");
            ctxNome.setText(rs.getString(2));
            ctxEmail.setText(rs.getString(3));
            ctxMorada.setText(rs.getString(4));
            ctxTele.setText(""+rs.getInt(5));
            ctxNif.setText(""+rs.getInt(6));
            ctxLogin.setText(rs.getString(7));
            ctxPass.setText(rs.getString(8));
            ctxRePass.setText(rs.getString(8));
        }
        } catch (SQLException ex) {
            Logger.getLogger(EditarUser.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }
 
}  


